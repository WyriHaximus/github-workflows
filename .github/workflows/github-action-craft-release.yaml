name: Create Release
on:
  workflow_call:
    inputs:
      milestone:
        description: The milestone to tag
        required: true
        type: string
      description:
        description: Additional information to add above the changelog in the release
        default: ""
        required: false
        type: string
      branch:
        description: The branch to tag the release on
        default: ""
        required: false
        type: string
      labels:
        description: The labels to for the sections of the changelog
        default: "Bug 🐞,Dependencies 📦,Feature 🏗,Enhancement ✨,Deprecations 👋"
        required: false
        type: string
      preReleaseScript:
        description: Script that runs just before the release is created
        default: ""
        required: false
        type: string
jobs:
  generate-version-strategy:
    name: Generate Version Strategy
    runs-on: ubuntu-latest
    outputs:
      docker_versions: ${{ steps.generate-version-strategy.outputs.docker_versions }}
      tag_versions: ${{ steps.generate-version-strategy.outputs.tag_versions }}
    steps:
      - uses: actions/checkout@v4
      - uses: WyriHaximus/github-action-break-up-semver@v1
        id: breakupsemver
        with:
          version: ${{ inputs.milestone }}
      - id: generate-version-strategy
        name: Generate Versions
        env:
          MAJOR: ${{ steps.breakupsemver.outputs.v_major }}
          MAJOR_MINOR: ${{ steps.breakupsemver.outputs.v_major_minor }}
          MAJOR_MINOR_PATCH: ${{ steps.breakupsemver.outputs.v_major_minor_patch }}
        run: |
          echo "::set-output name=docker_versions::[\"${MAJOR}\",\"${MAJOR_MINOR}\",\"${MAJOR_MINOR_PATCH}\"]"
          git tag > tag.list
          cat tag.list
          printf "::set-output name=tag_versions::%s" $(jq --raw-input --slurp 'split("\n")' tag.list -c | php -r "echo json_encode(array_values(array_diff_assoc(json_decode('[\"${MAJOR}\",\"${MAJOR_MINOR}\",\"${MAJOR_MINOR_PATCH}\"]'), json_decode(stream_get_contents(STDIN)))));")
  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Generate changelog
        uses: WyriHaximus/github-action-jwage-changelog-generator@v1
        id: changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          milestone: ${{ inputs.milestone }}
          labels: ${{ inputs.labels }}
      - name: Show changelog
        run: echo "${CHANGELOG}"
        env:
          CHANGELOG: ${{ steps.changelog.outputs.changelog }}
  tag-docker-image:
    name: Tag Docker image for version ${{ inputs.milestone }}
    needs:
      - generate-version-strategy
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(needs.generate-version-strategy.outputs.docker_versions) }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - run: echo "ghcr.io/${GITHUB_REPOSITORY}:sha-${GITHUB_SHA}" | tr '[:upper:]' '[:lower:]'
      - name: Login to GPR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
          docker login ghcr.io \
            --username "${GITHUB_ACTOR}" \
            --password-stdin
          printf "FROM %s" $(echo "ghcr.io/${GITHUB_REPOSITORY}:sha-${GITHUB_SHA}" | tr '[:upper:]' '[:lower:]') >> Dockerfile.tag
          docker build --platform=linux/arm64,linux/amd64 --output=type=registry --no-cache -f Dockerfile.tag -t $(echo "ghcr.io/${GITHUB_REPOSITORY}:${{ inputs.milestone }}" | tr '[:upper:]' '[:lower:]') .
  create-release:
    name: Create Release
    needs:
      - tag-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create release/${{ inputs.milestone }} branch
        run: git checkout -b release/${{ inputs.milestone }} ${GITHUB_SHA}
      - run: echo -e "${CHANGELOG}" > release-${{ inputs.milestone }}-changelog.md
        env:
          CHANGELOG: ${{ needs.generate-changelog.outputs.changelog }}
      - run: |
          echo -e "${MILESTONE_DESCRIPTION}\r\n\r\n${CHANGELOG}" > release-${{ inputs.milestone }}-release-message.md
          cat release-${{ inputs.milestone }}-release-message.md
          release_message=$(cat release-${{ inputs.milestone }}-release-message.md)
          release_message="${release_message//'%'/'%25'}"
          release_message="${release_message//$'\n'/'%0A'}"
          release_message="${release_message//$'\r'/'%0D'}"
          echo "::set-output name=release_message::$release_message"
        id: releasemessage
        env:
          MILESTONE_DESCRIPTION: ${{ github.event.milestone.description }}
          CHANGELOG: ${{ needs.generate-changelog.outputs.changelog }}
      - run: |
          git config user.name '${{ github.actor }}'
          git config user.email '${{ github.actor }}@users.noreply.github.com'
      - name: Run pre release script
        if: inputs.preReleaseScript != ''
        run: ${{ inputs.preReleaseScript }}
      - run: git tag -F release-${{ inputs.milestone }}-release-message.md ${{ inputs.milestone }}
      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          tags: true
          branch: release/${{ inputs.milestone }}
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.milestone }}
          body: ${{ steps.releasemessage.outputs.release_message }}
          draft: false
          prerelease: false
          generate_release_notes: false
          target_commitish: release/${{ inputs.milestone }}
      - name: Delete release/${{ inputs.milestone }} branch
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branches: release/${{ inputs.milestone }}
      - name: Updated related tags
        uses: haya14busa/action-update-semver@v1
        with:
          tag: ${{ inputs.milestone }}
