name: Continuous Integration
on:
  workflow_call:
    inputs:
      jsonPattern:
        description: The pattern to match which JSON files to check
        default: "\\.json$"
        required: false
        type: string
      workingDirectory:
        description: The directory to run this workflow in
        default: ""
        required: false
        type: string
      services:
        description: Any additional services to use
        default: "{}"
        required: false
        type: string
      env:
        description: Any additional environment variables
        default: "{}"
        required: false
        type: string

#defaults:
#  run:
#    working-directory: ${{ inputs.workingDirectory }}

jobs:
  package-name:
    name: Package Name
    runs-on: ubuntu-latest
    outputs:
      package-name: ${{ steps.package-name.outputs.package-name }}
    steps:
      - uses: actions/checkout@v4
      - id: package-name
        working-directory: ${{ inputs.workingDirectory }}
        run: |
          printf "package-name=[\"%s\"]" $(docker run --rm -v "`pwd`:`pwd`" jess/jq jq -r -c '.name' "$(pwd)/composer.json") >> $GITHUB_OUTPUT
  supported-versions-matrix:
    name: Supported Versions Matrix
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.supported-versions-matrix.outputs.version }}
      upcoming: ${{ steps.supported-versions-matrix.outputs.upcoming }}
      extensions: ${{ steps.supported-versions-matrix.outputs.extensions }}
    steps:
      - uses: actions/checkout@v4
      - id: supported-versions-matrix
        uses: WyriHaximus/github-action-composer-php-versions-in-range@v1
        with:
          upcomingReleases: true
          working-directory: ${{ inputs.workingDirectory }}
  supported-threading-matrix:
    name: Supported Threading Matrix
    runs-on: ubuntu-latest
    needs:
      - supported-versions-matrix
    outputs:
      version: ${{ steps.supported-threading-matrix.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - id: supported-threading-matrix
        uses: actions/github-script@v7
        env:
          PHP_EXTENSIONS: ${{ needs.supported-versions-matrix.outputs.extensions }}
        with:
          script: |
            const phpExtensions = JSON.parse(process.env.PHP_EXTENSIONS);
            for(var i = 0; i <= phpExtensions.length; i++) {
                if (phpExtensions[i] == 'parallel') { 
                  return ['zts'];
                }
            }
            return ['nts', 'zts'];
  supported-checks-matrix:
    name: Supported Checks Matrix
    runs-on: ubuntu-latest
    outputs:
      check: ${{ steps.supported-checks-matrix.outputs.check }}
      run-tests: ${{ steps.run-tests.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - id: supported-checks-matrix
        name: Generate check
        run: |
          printf "Checks found: %s\r\n" $(make task-list-ci)
          printf "check=%s" $(make task-list-ci) >> $GITHUB_OUTPUT
        working-directory: ${{ inputs.workingDirectory }}
      - uses: actions/github-script@v7
        id: run-tests
        env:
          CHECKS: ${{ steps.supported-checks-matrix.outputs.check }}
        with:
          script: |
            const checks = JSON.parse(process.env.CHECKS);
            console.log(checks);
            console.log(checks.includes("unit-testing"));
            console.log(checks.includes("unit-testing") ? "yes" : "no");
            return checks.includes("unit-testing") ? "yes" : "no";
  can-require:
    name: Test we can require "${{ matrix.package-name }}" on PHP ${{ matrix.php }} (${{ matrix.php-to-thread-or-not-to-thread }})
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        php-to-thread-or-not-to-thread: ${{ fromJson(needs.supported-threading-matrix.outputs.version) }}
        package-name: ${{ fromJson(needs.package-name.outputs.package-name) }}
    needs:
      - package-name
      - supported-versions-matrix
      - supported-threading-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/wyrihaximusnet/php:${{ matrix.php }}-${{ matrix.php-to-thread-or-not-to-thread }}-alpine-dev-root
    steps:
      - uses: actions/checkout@v4
        with:
          path: checked_out_package
      - name: Set Up composer.json
        run: |
          echo "{\"repositories\": [{\"name\": \"${{ matrix.package-name }}\",\"type\": \"path\",\"url\": \"./checked_out_package\"}]}" > composer.json
        working-directory: ${{ inputs.workingDirectory }}
      - name: Require package
        if: needs.supported-versions-matrix.outputs.upcoming != matrix.php
        run: |
          composer config --no-plugins "allow-plugins.*/*" true
          composer require "${{ matrix.package-name }}:dev-${GITHUB_SHA}" --no-progress --ansi --no-interaction --prefer-dist --no-plugins -o -vvv || composer require "${{ matrix.package-name }}:dev-${GITHUB_REF_NAME}" --no-progress --ansi --no-interaction --prefer-dist --no-plugins -o -vvv
        working-directory: ${{ inputs.workingDirectory }}
  qa:
    name: Run ${{ matrix.check }} on PHP ${{ matrix.php }} (${{ matrix.php-to-thread-or-not-to-thread }}) with ${{ matrix.composer }} dependency preference
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        php-to-thread-or-not-to-thread: ${{ fromJson(needs.supported-threading-matrix.outputs.version) }}
        composer: [lowest, locked, highest]
        check: ${{ fromJson(needs.supported-checks-matrix.outputs.check) }}
    needs:
      - supported-checks-matrix
      - supported-versions-matrix
      - supported-threading-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/wyrihaximusnet/php:${{ matrix.php }}-${{ matrix.php-to-thread-or-not-to-thread }}-alpine-dev-root
    env: ${{ fromJson(inputs.env) }}
    services: ${{ fromJson(inputs.services) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      - uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.composer }}
          working-directory: ${{ inputs.workingDirectory }}
      - run: git config --global --add safe.directory $GITHUB_WORKSPACE # Do this ourselves because `actions/checkout@v3 doesn't succeed in doing this
        working-directory: ${{ inputs.workingDirectory }}
      - run: make ${{ matrix.check }} || true
        working-directory: ${{ inputs.workingDirectory }}
        if: needs.supported-versions-matrix.outputs.upcoming == matrix.php || (matrix.php-to-thread-or-not-to-thread == 'zts' && matrix.check == 'psalm')
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
      - run: make ${{ matrix.check }}
        working-directory: ${{ inputs.workingDirectory }}
        if: needs.supported-versions-matrix.outputs.upcoming == matrix.php || (matrix.php-to-thread-or-not-to-thread == 'zts' && matrix.check == 'psalm') == false
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
  tests-directly-on-os:
    name: Run tests on PHP ${{ matrix.php }} (${{ matrix.php-to-thread-or-not-to-thread }}) with ${{ matrix.composer }} dependency preference (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        php: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}
        php-to-thread-or-not-to-thread: ${{ fromJson(needs.supported-threading-matrix.outputs.version) }}
        composer: [lowest, locked, highest]
    needs:
      - supported-checks-matrix
      - supported-versions-matrix
      - supported-threading-matrix
    runs-on: ${{ matrix.os }}
    if: ${{ needs.supported-checks-matrix.outputs.run-tests == '"yes"' }}
    env: ${{ fromJson(inputs.env) }}
    services: ${{ fromJson(inputs.services) }}
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        env:
          phpts: ${{ matrix.php-to-thread-or-not-to-thread }}
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          tools: pecl
          extensions: ${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ',') }}
          ini-file: development
      - uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.composer }}
          working-directory: ${{ inputs.workingDirectory }}
      - run: make unit-testing-raw || true
        working-directory: ${{ inputs.workingDirectory }}
        if: needs.supported-versions-matrix.outputs.upcoming == matrix.php
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
      - run: make unit-testing-raw
        working-directory: ${{ inputs.workingDirectory }}
        if: needs.supported-versions-matrix.outputs.upcoming != matrix.php
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_RUN_LOCALLY: ${{ secrets.COVERALLS_RUN_LOCALLY }}
  check-mark:
    name: ✔️
    needs:
      - can-require
      - qa
      - tests-directly-on-os
    runs-on: ubuntu-latest
    steps:
      - run: echo "✔️"
